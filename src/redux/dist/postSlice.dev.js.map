{"version":3,"sources":["postSlice.js"],"names":["fetchPosts","page","axios","get","response","data","createPost","post","postSlice","name","initialState","posts","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","message","unshift","reducer"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,IAAMA,UAAU,GAAG,+BAAiB,kBAAjB,EAAqC,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACtCC,kBAAMC,GAAN,6DAA+DF,IAAI,GAAG,EAAtE,gBADsC;;AAAA;AACvDG,UAAAA,QADuD;AAAA,2CAEtDA,QAAQ,CAACC,IAF6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC,CAAnB;;AAKA,IAAMC,UAAU,GAAG,+BAAiB,kBAAjB,EAAqC,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACtCL,kBAAMK,IAAN,CAAW,4CAAX,EAAyDA,IAAzD,CADsC;;AAAA;AACvDH,UAAAA,QADuD;AAAA,4CAEtDA,QAAQ,CAACC,IAF6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC,CAAnB;;AAKP,IAAMG,SAAS,GAAG,0BAAY;AAC5BC,EAAAA,IAAI,EAAE,OADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,MAAM,EAAE,IAFI;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAFc;AAO5BC,EAAAA,QAAQ,EAAE,EAPkB;AAQ5BC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AAC1BA,IAAAA,OAAO,CACJC,OADH,CACWjB,UAAU,CAACkB,OADtB,EAC+B,UAACC,KAAD,EAAW;AACtCA,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACD,KAHH,EAIGK,OAJH,CAIWjB,UAAU,CAACoB,SAJtB,EAIiC,UAACD,KAAD,QAAwB;AAAA,UAAdE,OAAc,QAAdA,OAAc;AACrDF,MAAAA,KAAK,CAACR,KAAN,GAAcU,OAAd;AACAF,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACD,KAPH,EAQGK,OARH,CAQWjB,UAAU,CAACsB,QARtB,EAQgC,UAACH,KAAD,SAAsB;AAAA,UAAZN,KAAY,SAAZA,KAAY;AAClDM,MAAAA,KAAK,CAACP,MAAN,GAAe,QAAf;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAcA,KAAK,CAACU,OAApB;AACD,KAXH,EAYGN,OAZH,CAYWX,UAAU,CAACc,SAZtB,EAYiC,UAACD,KAAD,SAAwB;AAAA,UAAdE,OAAc,SAAdA,OAAc;AACrDF,MAAAA,KAAK,CAACR,KAAN,CAAYa,OAAZ,CAAoBH,OAApB,EADqD,CACvB;AAC/B,KAdH;AAeD;AAxB2B,CAAZ,CAAlB;eA2Beb,SAAS,CAACiB,O","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async (page) => {\r\n  const response = await axios.get(`https://jsonplaceholder.typicode.com/posts?_start=${page * 10}&_limit=10`);\r\n  return response.data;\r\n});\r\n\r\nexport const createPost = createAsyncThunk('posts/createPost', async (post) => {\r\n  const response = await axios.post('https://jsonplaceholder.typicode.com/posts', post);\r\n  return response.data;\r\n});\r\n\r\nconst postSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    posts: [],\r\n    status: null,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchPosts.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchPosts.fulfilled, (state, { payload }) => {\r\n        state.posts = payload;\r\n        state.status = 'success';\r\n      })\r\n      .addCase(fetchPosts.rejected, (state, { error }) => {\r\n        state.status = 'failed';\r\n        state.error = error.message;\r\n      })\r\n      .addCase(createPost.fulfilled, (state, { payload }) => {\r\n        state.posts.unshift(payload); // Add new post at the beginning\r\n      });\r\n  },\r\n});\r\n\r\nexport default postSlice.reducer;\r\n"],"file":"postSlice.dev.js"}